// Code generated by ent, DO NOT EDIT.

package areacode

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the areacode type in the database.
	Label = "area_code"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldPCode holds the string denoting the p_code field in the database.
	FieldPCode = "p_code"
	// Table holds the table name of the areacode in the database.
	Table = "area_code"
)

// Columns holds all SQL columns for areacode fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldName,
	FieldLevel,
	FieldPCode,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// CodeValidator is a validator for the "code" field. It is called by the builders before save.
	CodeValidator func(int64) error
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
	// PCodeValidator is a validator for the "p_code" field. It is called by the builders before save.
	PCodeValidator func(int64) error
)

// OrderOption defines the ordering options for the AreaCode queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCode orders the results by the code field.
func ByCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByLevel orders the results by the level field.
func ByLevel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLevel, opts...).ToFunc()
}

// ByPCode orders the results by the p_code field.
func ByPCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPCode, opts...).ToFunc()
}
